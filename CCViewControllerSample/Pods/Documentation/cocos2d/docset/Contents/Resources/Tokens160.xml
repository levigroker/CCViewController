<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCSpriteFrame.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCSpriteFrame</TokenIdentifier>
			<Abstract>A CCSpriteFrame has:
	- texture: A CCTexture2D that will be used by the CCSprite
	- rectangle: A rectangle of the texture</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>
			
			<NodeRef refid="160"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setRect:</TokenIdentifier>
			<Abstract>rect of the frame in points. If it is updated, then rectInPixels will be updated too.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGRect rect</Declaration>
			
			
			<Anchor>//api/name/rect</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/rect</TokenIdentifier>
			<Abstract>rect of the frame in points. If it is updated, then rectInPixels will be updated too.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGRect rect</Declaration>
			
			
			<Anchor>//api/name/rect</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setRectInPixels:</TokenIdentifier>
			<Abstract>rect of the frame in pixels. If it is updated, then rect (points) will be udpated too.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGRect rectInPixels</Declaration>
			
			
			<Anchor>//api/name/rectInPixels</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/rectInPixels</TokenIdentifier>
			<Abstract>rect of the frame in pixels. If it is updated, then rect (points) will be udpated too.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGRect rectInPixels</Declaration>
			
			
			<Anchor>//api/name/rectInPixels</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setRotated:</TokenIdentifier>
			<Abstract>whether or not the rect of the frame is rotated ( x = x+width, y = y+height, width = height, height = width )</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) BOOL rotated</Declaration>
			
			
			<Anchor>//api/name/rotated</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/rotated</TokenIdentifier>
			<Abstract>whether or not the rect of the frame is rotated ( x = x+width, y = y+height, width = height, height = width )</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) BOOL rotated</Declaration>
			
			
			<Anchor>//api/name/rotated</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setOffset:</TokenIdentifier>
			<Abstract>offset of the frame in points</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGPoint offset</Declaration>
			
			
			<Anchor>//api/name/offset</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/offset</TokenIdentifier>
			<Abstract>offset of the frame in points</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGPoint offset</Declaration>
			
			
			<Anchor>//api/name/offset</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setOffsetInPixels:</TokenIdentifier>
			<Abstract>offset of the frame in pixels</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGPoint offsetInPixels</Declaration>
			
			
			<Anchor>//api/name/offsetInPixels</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/offsetInPixels</TokenIdentifier>
			<Abstract>offset of the frame in pixels</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGPoint offsetInPixels</Declaration>
			
			
			<Anchor>//api/name/offsetInPixels</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setOriginalSize:</TokenIdentifier>
			<Abstract>original size of the trimmed image in points</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGSize originalSize</Declaration>
			
			
			<Anchor>//api/name/originalSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/originalSize</TokenIdentifier>
			<Abstract>original size of the trimmed image in points</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGSize originalSize</Declaration>
			
			
			<Anchor>//api/name/originalSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setOriginalSizeInPixels:</TokenIdentifier>
			<Abstract>original size of the trimmed image in pixels</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGSize originalSizeInPixels</Declaration>
			
			
			<Anchor>//api/name/originalSizeInPixels</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/originalSizeInPixels</TokenIdentifier>
			<Abstract>original size of the trimmed image in pixels</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) CGSize originalSizeInPixels</Declaration>
			
			
			<Anchor>//api/name/originalSizeInPixels</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setTexture:</TokenIdentifier>
			<Abstract>texture of the frame</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) CCTexture2D *texture</Declaration>
			
			
			<Anchor>//api/name/texture</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/texture</TokenIdentifier>
			<Abstract>texture of the frame</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) CCTexture2D *texture</Declaration>
			
			
			<Anchor>//api/name/texture</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/setTextureFilename:</TokenIdentifier>
			<Abstract>texture file name of the frame</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) NSString *textureFilename</Declaration>
			
			
			<Anchor>//api/name/textureFilename</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteFrame/textureFilename</TokenIdentifier>
			<Abstract>texture file name of the frame</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) NSString *textureFilename</Declaration>
			
			
			<Anchor>//api/name/textureFilename</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCSpriteFrame/frameWithTexture:rect:</TokenIdentifier>
			<Abstract>Create a CCSpriteFrame with a texture, rect in points.
It is assumed that the frame was not trimmed.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>+ (id)frameWithTexture:(CCTexture2D *)texture rect:(CGRect)rect</Declaration>
			
			
			<Anchor>//api/name/frameWithTexture:rect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCSpriteFrame/frameWithTextureFilename:rect:</TokenIdentifier>
			<Abstract>Create a CCSpriteFrame with a texture filename, rect in points.
It is assumed that the frame was not trimmed.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>+ (id)frameWithTextureFilename:(NSString *)filename rect:(CGRect)rect</Declaration>
			
			
			<Anchor>//api/name/frameWithTextureFilename:rect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCSpriteFrame/frameWithTexture:rectInPixels:rotated:offset:originalSize:</TokenIdentifier>
			<Abstract>Create a CCSpriteFrame with a texture, rect, rotated, offset and originalSize in pixels.
The originalSize is the size in pixels of the frame before being trimmed.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>+ (id)frameWithTexture:(CCTexture2D *)texture rectInPixels:(CGRect)rect rotated:(BOOL)rotated offset:(CGPoint)offset originalSize:(CGSize)originalSize</Declaration>
			
			
			<Anchor>//api/name/frameWithTexture:rectInPixels:rotated:offset:originalSize:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCSpriteFrame/frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:</TokenIdentifier>
			<Abstract>Create a CCSpriteFrame with a texture filename, rect, rotated, offset and originalSize in pixels.
The originalSize is the size in pixels of the frame before being trimmed.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>+ (id)frameWithTextureFilename:(NSString *)filename rectInPixels:(CGRect)rect rotated:(BOOL)rotated offset:(CGPoint)offset originalSize:(CGSize)originalSize</Declaration>
			
			
			<Anchor>//api/name/frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/initWithTexture:rect:</TokenIdentifier>
			<Abstract>Initializes a CCSpriteFrame with a texture, rect in points;
It is assumed that the frame was not trimmed.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTexture:(CCTexture2D *)texture rect:(CGRect)rect</Declaration>
			
			
			<Anchor>//api/name/initWithTexture:rect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/initWithTextureFilename:rect:</TokenIdentifier>
			<Abstract>Initializes a CCSpriteFrame with a texture filename, rect in points;
It is assumed that the frame was not trimmed.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTextureFilename:(NSString *)filename rect:(CGRect)rect</Declaration>
			
			
			<Anchor>//api/name/initWithTextureFilename:rect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/initWithTexture:rectInPixels:rotated:offset:originalSize:</TokenIdentifier>
			<Abstract>Initializes a CCSpriteFrame with a texture, rect, rotated, offset and originalSize in pixels.
The originalSize is the size in pixels of the frame before being trimmed.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTexture:(CCTexture2D *)texture rectInPixels:(CGRect)rect rotated:(BOOL)rotated offset:(CGPoint)offset originalSize:(CGSize)originalSize</Declaration>
			
			
			<Anchor>//api/name/initWithTexture:rectInPixels:rotated:offset:originalSize:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteFrame/initWithTextureFilename:rectInPixels:rotated:offset:originalSize:</TokenIdentifier>
			<Abstract>Initializes a CCSpriteFrame with a texture, rect, rotated, offset and originalSize in pixels.
The originalSize is the size in pixels of the frame before being trimmed.</Abstract>
			<DeclaredIn>CCSpriteFrame.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTextureFilename:(NSString *)filename rectInPixels:(CGRect)rect rotated:(BOOL)rotated offset:(CGPoint)offset originalSize:(CGSize)originalSize</Declaration>
			
			
			<Anchor>//api/name/initWithTextureFilename:rectInPixels:rotated:offset:originalSize:</Anchor>
		</Token>
		
	</File>
</Tokens>