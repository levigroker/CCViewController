<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCConfiguration.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCConfiguration</TokenIdentifier>
			<Abstract>CCConfiguration contains some openGL variables</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>
			
			<NodeRef refid="32"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setMaxTextureSize:</TokenIdentifier>
			<Abstract>OpenGL Max texture size.</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) GLint maxTextureSize</Declaration>
			
			
			<Anchor>//api/name/maxTextureSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/maxTextureSize</TokenIdentifier>
			<Abstract>OpenGL Max texture size.</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) GLint maxTextureSize</Declaration>
			
			
			<Anchor>//api/name/maxTextureSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setMaxModelviewStackDepth:</TokenIdentifier>
			<Abstract>OpenGL Max Modelview Stack Depth.</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) GLint maxModelviewStackDepth</Declaration>
			
			
			<Anchor>//api/name/maxModelviewStackDepth</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/maxModelviewStackDepth</TokenIdentifier>
			<Abstract>OpenGL Max Modelview Stack Depth.</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) GLint maxModelviewStackDepth</Declaration>
			
			
			<Anchor>//api/name/maxModelviewStackDepth</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setMaxTextureUnits:</TokenIdentifier>
			<Abstract>returns the maximum texture units</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) GLint maxTextureUnits</Declaration>
			
			
			<Anchor>//api/name/maxTextureUnits</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/maxTextureUnits</TokenIdentifier>
			<Abstract>returns the maximum texture units</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) GLint maxTextureUnits</Declaration>
			
			
			<Anchor>//api/name/maxTextureUnits</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setSupportsNPOT:</TokenIdentifier>
			<Abstract>Whether or not the GPU supports NPOT (Non Power Of Two) textures.
OpenGL ES 2.0 already supports NPOT (iOS).</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsNPOT</Declaration>
			
			
			<Anchor>//api/name/supportsNPOT</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/supportsNPOT</TokenIdentifier>
			<Abstract>Whether or not the GPU supports NPOT (Non Power Of Two) textures.
OpenGL ES 2.0 already supports NPOT (iOS).</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsNPOT</Declaration>
			
			
			<Anchor>//api/name/supportsNPOT</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setSupportsPVRTC:</TokenIdentifier>
			<Abstract>Whether or not PVR Texture Compressed is supported</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsPVRTC</Declaration>
			
			
			<Anchor>//api/name/supportsPVRTC</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/supportsPVRTC</TokenIdentifier>
			<Abstract>Whether or not PVR Texture Compressed is supported</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsPVRTC</Declaration>
			
			
			<Anchor>//api/name/supportsPVRTC</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setSupportsBGRA8888:</TokenIdentifier>
			<Abstract>Whether or not BGRA8888 textures are supported.</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsBGRA8888</Declaration>
			
			
			<Anchor>//api/name/supportsBGRA8888</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/supportsBGRA8888</TokenIdentifier>
			<Abstract>Whether or not BGRA8888 textures are supported.</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsBGRA8888</Declaration>
			
			
			<Anchor>//api/name/supportsBGRA8888</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setSupportsDiscardFramebuffer:</TokenIdentifier>
			<Abstract>Whether or not glDiscardFramebufferEXT is supported</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsDiscardFramebuffer</Declaration>
			
			
			<Anchor>//api/name/supportsDiscardFramebuffer</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/supportsDiscardFramebuffer</TokenIdentifier>
			<Abstract>Whether or not glDiscardFramebufferEXT is supported</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsDiscardFramebuffer</Declaration>
			
			
			<Anchor>//api/name/supportsDiscardFramebuffer</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setSupportsShareableVAO:</TokenIdentifier>
			<Abstract>Whether or not shareable VAOs are supported.</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsShareableVAO</Declaration>
			
			
			<Anchor>//api/name/supportsShareableVAO</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/supportsShareableVAO</TokenIdentifier>
			<Abstract>Whether or not shareable VAOs are supported.</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsShareableVAO</Declaration>
			
			
			<Anchor>//api/name/supportsShareableVAO</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/setOSVersion:</TokenIdentifier>
			<Abstract>returns the OS version.
	- On iOS devices it returns the firmware version.
	- On Mac returns the OS version</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) unsigned int OSVersion</Declaration>
			
			
			<Anchor>//api/name/OSVersion</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCConfiguration/OSVersion</TokenIdentifier>
			<Abstract>returns the OS version.
	- On iOS devices it returns the firmware version.
	- On Mac returns the OS version</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) unsigned int OSVersion</Declaration>
			
			
			<Anchor>//api/name/OSVersion</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCConfiguration/sharedConfiguration</TokenIdentifier>
			<Abstract>returns a shared instance of the CCConfiguration</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>+ (CCConfiguration *)sharedConfiguration</Declaration>
			
			
			<Anchor>//api/name/sharedConfiguration</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCConfiguration/checkForGLExtension:</TokenIdentifier>
			<Abstract>returns whether or not an OpenGL is supported</Abstract>
			<DeclaredIn>CCConfiguration.h</DeclaredIn>			
			
			<Declaration>- (BOOL)checkForGLExtension:(NSString *)searchName</Declaration>
			
			
			<Anchor>//api/name/checkForGLExtension:</Anchor>
		</Token>
		
	</File>
</Tokens>