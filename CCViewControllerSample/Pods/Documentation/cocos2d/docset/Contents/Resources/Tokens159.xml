<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCSpriteBatchNode.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCSpriteBatchNode</TokenIdentifier>
			<Abstract>CCSpriteBatchNode is like a batch node: if it contains children, it will draw them in 1 single OpenGL call
(often known as "batch draw").</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>
			
			<NodeRef refid="159"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/setTextureAtlas:</TokenIdentifier>
			<Abstract>returns the TextureAtlas that is used</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) CCTextureAtlas *textureAtlas</Declaration>
			
			
			<Anchor>//api/name/textureAtlas</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteBatchNode/textureAtlas</TokenIdentifier>
			<Abstract>returns the TextureAtlas that is used</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) CCTextureAtlas *textureAtlas</Declaration>
			
			
			<Anchor>//api/name/textureAtlas</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/setBlendFunc:</TokenIdentifier>
			<Abstract>conforms to CCTextureProtocol protocol</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ccBlendFunc blendFunc</Declaration>
			
			
			<Anchor>//api/name/blendFunc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteBatchNode/blendFunc</TokenIdentifier>
			<Abstract>conforms to CCTextureProtocol protocol</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ccBlendFunc blendFunc</Declaration>
			
			
			<Anchor>//api/name/blendFunc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/setDescendants:</TokenIdentifier>
			<Abstract>descendants (children, gran children, etc)</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) CCArray *descendants</Declaration>
			
			
			<Anchor>//api/name/descendants</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCSpriteBatchNode/descendants</TokenIdentifier>
			<Abstract>descendants (children, gran children, etc)</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) CCArray *descendants</Declaration>
			
			
			<Anchor>//api/name/descendants</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCSpriteBatchNode/batchNodeWithTexture:</TokenIdentifier>
			<Abstract>creates a CCSpriteBatchNode with a texture2d and a default capacity of 29 children.
The capacity will be increased in 33% in runtime if it run out of space.</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>+ (id)batchNodeWithTexture:(CCTexture2D *)tex</Declaration>
			
			
			<Anchor>//api/name/batchNodeWithTexture:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCSpriteBatchNode/batchNodeWithTexture:capacity:</TokenIdentifier>
			<Abstract>creates a CCSpriteBatchNode with a texture2d and capacity of children.
The capacity will be increased in 33% in runtime if it run out of space.</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>+ (id)batchNodeWithTexture:(CCTexture2D *)tex capacity:(NSUInteger)capacity</Declaration>
			
			
			<Anchor>//api/name/batchNodeWithTexture:capacity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCSpriteBatchNode/batchNodeWithFile:</TokenIdentifier>
			<Abstract>creates a CCSpriteBatchNode with a file image (.png, .jpeg, .pvr, etc) with a default capacity of 29 children.
The capacity will be increased in 33% in runtime if it run out of space.
The file will be loaded using the TextureMgr.</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>+ (id)batchNodeWithFile:(NSString *)fileImage</Declaration>
			
			
			<Anchor>//api/name/batchNodeWithFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCSpriteBatchNode/batchNodeWithFile:capacity:</TokenIdentifier>
			<Abstract>creates a CCSpriteBatchNode with a file image (.png, .jpeg, .pvr, etc) and capacity of children.
The capacity will be increased in 33% in runtime if it run out of space.
The file will be loaded using the TextureMgr.</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>+ (id)batchNodeWithFile:(NSString *)fileImage capacity:(NSUInteger)capacity</Declaration>
			
			
			<Anchor>//api/name/batchNodeWithFile:capacity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/initWithTexture:capacity:</TokenIdentifier>
			<Abstract>initializes a CCSpriteBatchNode with a texture2d and capacity of children.
The capacity will be increased in 33% in runtime if it run out of space.</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTexture:(CCTexture2D *)tex capacity:(NSUInteger)capacity</Declaration>
			
			
			<Anchor>//api/name/initWithTexture:capacity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/initWithFile:capacity:</TokenIdentifier>
			<Abstract>initializes a CCSpriteBatchNode with a file image (.png, .jpeg, .pvr, etc) and a capacity of children.
The capacity will be increased in 33% in runtime if it run out of space.
The file will be loaded using the TextureMgr.</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (id)initWithFile:(NSString *)fileImage capacity:(NSUInteger)capacity</Declaration>
			
			
			<Anchor>//api/name/initWithFile:capacity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/increaseAtlasCapacity</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (void)increaseAtlasCapacity</Declaration>
			
			
			<Anchor>//api/name/increaseAtlasCapacity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/removeChildAtIndex:cleanup:</TokenIdentifier>
			<Abstract>removes a child given a certain index. It will also cleanup the running actions depending on the cleanup parameter.</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (void)removeChildAtIndex:(NSUInteger)index cleanup:(BOOL)doCleanup</Declaration>
			
			
			<Anchor>//api/name/removeChildAtIndex:cleanup:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/removeChild:cleanup:</TokenIdentifier>
			<Abstract>removes a child given a reference. It will also cleanup the running actions depending on the cleanup parameter.</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (void)removeChild:(CCSprite *)sprite cleanup:(BOOL)doCleanup</Declaration>
			
			
			<Anchor>//api/name/removeChild:cleanup:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/insertChild:inAtlasAtIndex:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (void)insertChild:(CCSprite *)child inAtlasAtIndex:(NSUInteger)index</Declaration>
			
			
			<Anchor>//api/name/insertChild:inAtlasAtIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/appendChild:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (void)appendChild:(CCSprite *)sprite</Declaration>
			
			
			<Anchor>//api/name/appendChild:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/removeSpriteFromAtlas:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (void)removeSpriteFromAtlas:(CCSprite *)sprite</Declaration>
			
			
			<Anchor>//api/name/removeSpriteFromAtlas:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/rebuildIndexInOrder:atlasIndex:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (NSUInteger)rebuildIndexInOrder:(CCSprite *)parent atlasIndex:(NSUInteger)index</Declaration>
			
			
			<Anchor>//api/name/rebuildIndexInOrder:atlasIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/atlasIndexForChild:atZ:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (NSUInteger)atlasIndexForChild:(CCSprite *)sprite atZ:(NSInteger)z</Declaration>
			
			
			<Anchor>//api/name/atlasIndexForChild:atZ:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/reorderBatch:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (void)reorderBatch:(BOOL)reorder</Declaration>
			
			
			<Anchor>//api/name/reorderBatch:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/addSpriteWithoutQuad:z:tag:</TokenIdentifier>
			<Abstract>Adds a quad into the texture atlas but it won't be added into the children array.
This method should be called only when you are dealing with very big AtlasSrite and when most of the CCSprite won't be updated.
For example: a tile map (CCTMXMap) or a label with lots of characgers (CCLabelBMFont</Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (id)addSpriteWithoutQuad:(CCSprite *)child z:(NSUInteger)z tag:(NSInteger)aTag</Declaration>
			
			
			<Anchor>//api/name/addSpriteWithoutQuad:z:tag:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCSpriteBatchNode/addQuadFromSprite:quadIndex:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCSpriteBatchNode.h</DeclaredIn>			
			
			<Declaration>- (void)addQuadFromSprite:(CCSprite *)sprite quadIndex:(NSUInteger)index</Declaration>
			
			
			<Anchor>//api/name/addQuadFromSprite:quadIndex:</Anchor>
		</Token>
		
	</File>
</Tokens>