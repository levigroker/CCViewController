<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/CCMouseEventDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/CCMouseEventDelegate</TokenIdentifier>
			<Abstract>CCMouseEventDelegate protocol.
Implement it in your node to receive any of mouse events</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>
			
			<NodeRef refid="254"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccMouseDown:</TokenIdentifier>
			<Abstract>called when the "mouseDown" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccMouseDown:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccMouseDown:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccMouseDragged:</TokenIdentifier>
			<Abstract>called when the "mouseDragged" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccMouseDragged:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccMouseDragged:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccMouseMoved:</TokenIdentifier>
			<Abstract>called when the "mouseMoved" event is received.
Return YES to avoid propagating the event to other delegates.
By default, "mouseMoved" is disabled. To enable it, send the "setAcceptsMouseMovedEvents:YES" message to the main window.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccMouseMoved:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccMouseMoved:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccMouseUp:</TokenIdentifier>
			<Abstract>called when the "mouseUp" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccMouseUp:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccMouseUp:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccRightMouseDown:</TokenIdentifier>
			<Abstract>called when the "rightMouseDown" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccRightMouseDown:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccRightMouseDown:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccRightMouseDragged:</TokenIdentifier>
			<Abstract>called when the "rightMouseDragged" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccRightMouseDragged:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccRightMouseDragged:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccRightMouseUp:</TokenIdentifier>
			<Abstract>called when the "rightMouseUp" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccRightMouseUp:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccRightMouseUp:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccOtherMouseDown:</TokenIdentifier>
			<Abstract>called when the "otherMouseDown" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccOtherMouseDown:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccOtherMouseDown:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccOtherMouseDragged:</TokenIdentifier>
			<Abstract>called when the "otherMouseDragged" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccOtherMouseDragged:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccOtherMouseDragged:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccOtherMouseUp:</TokenIdentifier>
			<Abstract>called when the "otherMouseUp" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccOtherMouseUp:(NSEvent *)event</Declaration>
			
			
			<Anchor>//api/name/ccOtherMouseUp:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccScrollWheel:</TokenIdentifier>
			<Abstract>called when the "scrollWheel" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)ccScrollWheel:(NSEvent *)theEvent</Declaration>
			
			
			<Anchor>//api/name/ccScrollWheel:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccMouseEntered:</TokenIdentifier>
			<Abstract>called when the "mouseEntered" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (void)ccMouseEntered:(NSEvent *)theEvent</Declaration>
			
			
			<Anchor>//api/name/ccMouseEntered:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCMouseEventDelegate/ccMouseExited:</TokenIdentifier>
			<Abstract>called when the "mouseExited" event is received.
Return YES to avoid propagating the event to other delegates.</Abstract>
			<DeclaredIn>CCEventDispatcher.h</DeclaredIn>			
			
			<Declaration>- (void)ccMouseExited:(NSEvent *)theEvent</Declaration>
			
			
			<Anchor>//api/name/ccMouseExited:</Anchor>
		</Token>
		
	</File>
</Tokens>