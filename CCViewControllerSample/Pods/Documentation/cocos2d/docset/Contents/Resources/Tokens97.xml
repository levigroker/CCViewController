<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCMenu.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCMenu</TokenIdentifier>
			<Abstract>A CCMenu</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>
			
			<NodeRef refid="97"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/setOpacity:</TokenIdentifier>
			<Abstract>conforms to CCRGBAProtocol protocol</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) GLubyte opacity</Declaration>
			
			
			<Anchor>//api/name/opacity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCMenu/opacity</TokenIdentifier>
			<Abstract>conforms to CCRGBAProtocol protocol</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) GLubyte opacity</Declaration>
			
			
			<Anchor>//api/name/opacity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/setColor:</TokenIdentifier>
			<Abstract>conforms to CCRGBAProtocol protocol</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) ccColor3B color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCMenu/color</TokenIdentifier>
			<Abstract>conforms to CCRGBAProtocol protocol</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) ccColor3B color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/setEnabled:</TokenIdentifier>
			<Abstract>whether or not the menu will receive events</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) BOOL enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCMenu/enabled</TokenIdentifier>
			<Abstract>whether or not the menu will receive events</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) BOOL enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenu/menuWithItems:</TokenIdentifier>
			<Abstract>creates a CCMenu with its items</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>+ (id)menuWithItems:(CCMenuItem *)item, ...</Declaration>
			
			
			<Anchor>//api/name/menuWithItems:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenu/menuWithArray:</TokenIdentifier>
			<Abstract>creates a CCMenu with a NSArray of CCMenuItem objects</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>+ (id)menuWithArray:(NSArray *)arrayOfItems</Declaration>
			
			
			<Anchor>//api/name/menuWithArray:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/initWithItems:vaList:</TokenIdentifier>
			<Abstract>initializes a CCMenu with its items</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (id)initWithItems:(CCMenuItem *)item vaList:(va_list)args</Declaration>
			
			
			<Anchor>//api/name/initWithItems:vaList:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/initWithArray:</TokenIdentifier>
			<Abstract>initializes a CCMenu with a NSArray of CCMenuItem objects</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (id)initWithArray:(NSArray *)arrayOfItems</Declaration>
			
			
			<Anchor>//api/name/initWithArray:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/alignItemsVertically</TokenIdentifier>
			<Abstract>align items vertically</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)alignItemsVertically</Declaration>
			
			
			<Anchor>//api/name/alignItemsVertically</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/alignItemsVerticallyWithPadding:</TokenIdentifier>
			<Abstract>align items vertically with padding</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)alignItemsVerticallyWithPadding:(float)padding</Declaration>
			
			
			<Anchor>//api/name/alignItemsVerticallyWithPadding:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/alignItemsHorizontally</TokenIdentifier>
			<Abstract>align items horizontally</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)alignItemsHorizontally</Declaration>
			
			
			<Anchor>//api/name/alignItemsHorizontally</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/alignItemsHorizontallyWithPadding:</TokenIdentifier>
			<Abstract>align items horizontally with padding</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)alignItemsHorizontallyWithPadding:(float)padding</Declaration>
			
			
			<Anchor>//api/name/alignItemsHorizontallyWithPadding:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/alignItemsInColumns:</TokenIdentifier>
			<Abstract>align items in rows of columns</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)alignItemsInColumns:(NSNumber *)columns, ...</Declaration>
			
			
			<Anchor>//api/name/alignItemsInColumns:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/alignItemsInColumns:vaList:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)alignItemsInColumns:(NSNumber *)columns vaList:(va_list)args</Declaration>
			
			
			<Anchor>//api/name/alignItemsInColumns:vaList:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/alignItemsInRows:</TokenIdentifier>
			<Abstract>align items in columns of rows</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)alignItemsInRows:(NSNumber *)rows, ...</Declaration>
			
			
			<Anchor>//api/name/alignItemsInRows:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/alignItemsInRows:vaList:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)alignItemsInRows:(NSNumber *)rows vaList:(va_list)args</Declaration>
			
			
			<Anchor>//api/name/alignItemsInRows:vaList:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenu/setHandlerPriority:</TokenIdentifier>
			<Abstract>set event handler priority. By default it is: kCCMenuTouchPriority</Abstract>
			<DeclaredIn>CCMenu.h</DeclaredIn>			
			
			<Declaration>- (void)setHandlerPriority:(NSInteger)newPriority</Declaration>
			
			
			<Anchor>//api/name/setHandlerPriority:</Anchor>
		</Token>
		
	</File>
</Tokens>