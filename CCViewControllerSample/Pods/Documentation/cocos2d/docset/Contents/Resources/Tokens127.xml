<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCPointArray.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCPointArray</TokenIdentifier>
			<Abstract>An Array that contain control points.</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>
			
			<NodeRef refid="127"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/setControlPoints:</TokenIdentifier>
			<Abstract>Array that contains the control points</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) NSMutableArray *controlPoints</Declaration>
			
			
			<Anchor>//api/name/controlPoints</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCPointArray/controlPoints</TokenIdentifier>
			<Abstract>Array that contains the control points</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) NSMutableArray *controlPoints</Declaration>
			
			
			<Anchor>//api/name/controlPoints</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCPointArray/arrayWithCapacity:</TokenIdentifier>
			<Abstract>creates and initializes a Points array with capacity</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>+ (id)arrayWithCapacity:(NSUInteger)capacity</Declaration>
			
			
			<Anchor>//api/name/arrayWithCapacity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/initWithCapacity:</TokenIdentifier>
			<Abstract>initializes a Catmull Rom config with a capacity hint</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (id)initWithCapacity:(NSUInteger)capacity</Declaration>
			
			
			<Anchor>//api/name/initWithCapacity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/addControlPoint:</TokenIdentifier>
			<Abstract>appends a control point</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (void)addControlPoint:(CGPoint)controlPoint</Declaration>
			
			
			<Anchor>//api/name/addControlPoint:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/insertControlPoint:atIndex:</TokenIdentifier>
			<Abstract>inserts a controlPoint at index</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (void)insertControlPoint:(CGPoint)controlPoint atIndex:(NSUInteger)index</Declaration>
			
			
			<Anchor>//api/name/insertControlPoint:atIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/replaceControlPoint:atIndex:</TokenIdentifier>
			<Abstract>replaces an existing controlPoint at index</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (void)replaceControlPoint:(CGPoint)controlPoint atIndex:(NSUInteger)index</Declaration>
			
			
			<Anchor>//api/name/replaceControlPoint:atIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/getControlPointAtIndex:</TokenIdentifier>
			<Abstract>get the value of a controlPoint at a given index</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (CGPoint)getControlPointAtIndex:(NSInteger)index</Declaration>
			
			
			<Anchor>//api/name/getControlPointAtIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/removeControlPointAtIndex:</TokenIdentifier>
			<Abstract>deletes a control point at a given index</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (void)removeControlPointAtIndex:(NSUInteger)index</Declaration>
			
			
			<Anchor>//api/name/removeControlPointAtIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/count</TokenIdentifier>
			<Abstract>returns the number of objects of the control point array</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (NSUInteger)count</Declaration>
			
			
			<Anchor>//api/name/count</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/reverse</TokenIdentifier>
			<Abstract>returns a new copy of the array reversed. User is responsible for releasing this copy</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (CCPointArray *)reverse</Declaration>
			
			
			<Anchor>//api/name/reverse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCPointArray/reverseInline</TokenIdentifier>
			<Abstract>reverse the current control point array inline, without generating a new one</Abstract>
			<DeclaredIn>CCActionCatmullRom.h</DeclaredIn>			
			
			<Declaration>- (void)reverseInline</Declaration>
			
			
			<Anchor>//api/name/reverseInline</Anchor>
		</Token>
		
	</File>
</Tokens>