<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCParticleSystem.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCParticleSystem</TokenIdentifier>
			<Abstract>Particle System base class
Attributes of a Particle System:
	- emmision rate of the particles
	- Gravity Mode (Mode A):
		- gravity
		- direction
		- speed +-  variance
		- tangential acceleration +- variance
		- radial acceleration +- variance
	- Radius Mode (Mode B):
		- startRadius +- variance
		- endRadius +- variance
		- rotate +- variance
	- Properties common to all modes:
		- life +- life variance
		- start spin +- variance
		- end spin +- variance
		- start size +- variance
		- end size +- variance
		- start color +- variance
		- end color +- variance
		- life +- variance
		- blending function
	- texture</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>
			
			<NodeRef refid="124"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setActive:</TokenIdentifier>
			<Abstract>Is the emitter active</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL active</Declaration>
			
			
			<Anchor>//api/name/active</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/active</TokenIdentifier>
			<Abstract>Is the emitter active</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL active</Declaration>
			
			
			<Anchor>//api/name/active</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setParticleCount:</TokenIdentifier>
			<Abstract>Quantity of particles that are being simulated at the moment</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSUInteger particleCount</Declaration>
			
			
			<Anchor>//api/name/particleCount</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/particleCount</TokenIdentifier>
			<Abstract>Quantity of particles that are being simulated at the moment</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSUInteger particleCount</Declaration>
			
			
			<Anchor>//api/name/particleCount</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setDuration:</TokenIdentifier>
			<Abstract>How many seconds the emitter wil run. -1 means 'forever'</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float duration</Declaration>
			
			
			<Anchor>//api/name/duration</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/duration</TokenIdentifier>
			<Abstract>How many seconds the emitter wil run. -1 means 'forever'</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float duration</Declaration>
			
			
			<Anchor>//api/name/duration</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setSourcePosition:</TokenIdentifier>
			<Abstract>sourcePosition of the emitter</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) CGPoint sourcePosition</Declaration>
			
			
			<Anchor>//api/name/sourcePosition</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/sourcePosition</TokenIdentifier>
			<Abstract>sourcePosition of the emitter</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) CGPoint sourcePosition</Declaration>
			
			
			<Anchor>//api/name/sourcePosition</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setPosVar:</TokenIdentifier>
			<Abstract>Position variance of the emitter</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) CGPoint posVar</Declaration>
			
			
			<Anchor>//api/name/posVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/posVar</TokenIdentifier>
			<Abstract>Position variance of the emitter</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) CGPoint posVar</Declaration>
			
			
			<Anchor>//api/name/posVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setLife:</TokenIdentifier>
			<Abstract>life, and life variation of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float life</Declaration>
			
			
			<Anchor>//api/name/life</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/life</TokenIdentifier>
			<Abstract>life, and life variation of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float life</Declaration>
			
			
			<Anchor>//api/name/life</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setLifeVar:</TokenIdentifier>
			<Abstract>life variance of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float lifeVar</Declaration>
			
			
			<Anchor>//api/name/lifeVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/lifeVar</TokenIdentifier>
			<Abstract>life variance of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float lifeVar</Declaration>
			
			
			<Anchor>//api/name/lifeVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setAngle:</TokenIdentifier>
			<Abstract>angle and angle variation of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float angle</Declaration>
			
			
			<Anchor>//api/name/angle</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/angle</TokenIdentifier>
			<Abstract>angle and angle variation of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float angle</Declaration>
			
			
			<Anchor>//api/name/angle</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setAngleVar:</TokenIdentifier>
			<Abstract>angle variance of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float angleVar</Declaration>
			
			
			<Anchor>//api/name/angleVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/angleVar</TokenIdentifier>
			<Abstract>angle variance of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float angleVar</Declaration>
			
			
			<Anchor>//api/name/angleVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setGravity:</TokenIdentifier>
			<Abstract>Gravity value. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) CGPoint gravity</Declaration>
			
			
			<Anchor>//api/name/gravity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/gravity</TokenIdentifier>
			<Abstract>Gravity value. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) CGPoint gravity</Declaration>
			
			
			<Anchor>//api/name/gravity</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setSpeed:</TokenIdentifier>
			<Abstract>speed of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float speed</Declaration>
			
			
			<Anchor>//api/name/speed</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/speed</TokenIdentifier>
			<Abstract>speed of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float speed</Declaration>
			
			
			<Anchor>//api/name/speed</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setSpeedVar:</TokenIdentifier>
			<Abstract>speed variance of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float speedVar</Declaration>
			
			
			<Anchor>//api/name/speedVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/speedVar</TokenIdentifier>
			<Abstract>speed variance of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float speedVar</Declaration>
			
			
			<Anchor>//api/name/speedVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setTangentialAccel:</TokenIdentifier>
			<Abstract>tangential acceleration of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float tangentialAccel</Declaration>
			
			
			<Anchor>//api/name/tangentialAccel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/tangentialAccel</TokenIdentifier>
			<Abstract>tangential acceleration of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float tangentialAccel</Declaration>
			
			
			<Anchor>//api/name/tangentialAccel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setTangentialAccelVar:</TokenIdentifier>
			<Abstract>tangential acceleration variance of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float tangentialAccelVar</Declaration>
			
			
			<Anchor>//api/name/tangentialAccelVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/tangentialAccelVar</TokenIdentifier>
			<Abstract>tangential acceleration variance of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float tangentialAccelVar</Declaration>
			
			
			<Anchor>//api/name/tangentialAccelVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setRadialAccel:</TokenIdentifier>
			<Abstract>radial acceleration of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float radialAccel</Declaration>
			
			
			<Anchor>//api/name/radialAccel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/radialAccel</TokenIdentifier>
			<Abstract>radial acceleration of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float radialAccel</Declaration>
			
			
			<Anchor>//api/name/radialAccel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setRadialAccelVar:</TokenIdentifier>
			<Abstract>radial acceleration variance of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float radialAccelVar</Declaration>
			
			
			<Anchor>//api/name/radialAccelVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/radialAccelVar</TokenIdentifier>
			<Abstract>radial acceleration variance of each particle. Only available in 'Gravity' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float radialAccelVar</Declaration>
			
			
			<Anchor>//api/name/radialAccelVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setStartRadius:</TokenIdentifier>
			<Abstract>The starting radius of the particles. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startRadius</Declaration>
			
			
			<Anchor>//api/name/startRadius</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/startRadius</TokenIdentifier>
			<Abstract>The starting radius of the particles. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startRadius</Declaration>
			
			
			<Anchor>//api/name/startRadius</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setStartRadiusVar:</TokenIdentifier>
			<Abstract>The starting radius variance of the particles. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startRadiusVar</Declaration>
			
			
			<Anchor>//api/name/startRadiusVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/startRadiusVar</TokenIdentifier>
			<Abstract>The starting radius variance of the particles. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startRadiusVar</Declaration>
			
			
			<Anchor>//api/name/startRadiusVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEndRadius:</TokenIdentifier>
			<Abstract>The ending radius of the particles. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endRadius</Declaration>
			
			
			<Anchor>//api/name/endRadius</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/endRadius</TokenIdentifier>
			<Abstract>The ending radius of the particles. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endRadius</Declaration>
			
			
			<Anchor>//api/name/endRadius</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEndRadiusVar:</TokenIdentifier>
			<Abstract>The ending radius variance of the particles. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endRadiusVar</Declaration>
			
			
			<Anchor>//api/name/endRadiusVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/endRadiusVar</TokenIdentifier>
			<Abstract>The ending radius variance of the particles. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endRadiusVar</Declaration>
			
			
			<Anchor>//api/name/endRadiusVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setRotatePerSecond:</TokenIdentifier>
			<Abstract>Number of degress to rotate a particle around the source pos per second. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float rotatePerSecond</Declaration>
			
			
			<Anchor>//api/name/rotatePerSecond</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/rotatePerSecond</TokenIdentifier>
			<Abstract>Number of degress to rotate a particle around the source pos per second. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float rotatePerSecond</Declaration>
			
			
			<Anchor>//api/name/rotatePerSecond</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setRotatePerSecondVar:</TokenIdentifier>
			<Abstract>Variance in degrees for rotatePerSecond. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float rotatePerSecondVar</Declaration>
			
			
			<Anchor>//api/name/rotatePerSecondVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/rotatePerSecondVar</TokenIdentifier>
			<Abstract>Variance in degrees for rotatePerSecond. Only available in 'Radius' mode.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float rotatePerSecondVar</Declaration>
			
			
			<Anchor>//api/name/rotatePerSecondVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setStartSize:</TokenIdentifier>
			<Abstract>start size in pixels of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startSize</Declaration>
			
			
			<Anchor>//api/name/startSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/startSize</TokenIdentifier>
			<Abstract>start size in pixels of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startSize</Declaration>
			
			
			<Anchor>//api/name/startSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setStartSizeVar:</TokenIdentifier>
			<Abstract>size variance in pixels of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startSizeVar</Declaration>
			
			
			<Anchor>//api/name/startSizeVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/startSizeVar</TokenIdentifier>
			<Abstract>size variance in pixels of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startSizeVar</Declaration>
			
			
			<Anchor>//api/name/startSizeVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEndSize:</TokenIdentifier>
			<Abstract>end size in pixels of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endSize</Declaration>
			
			
			<Anchor>//api/name/endSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/endSize</TokenIdentifier>
			<Abstract>end size in pixels of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endSize</Declaration>
			
			
			<Anchor>//api/name/endSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEndSizeVar:</TokenIdentifier>
			<Abstract>end size variance in pixels of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endSizeVar</Declaration>
			
			
			<Anchor>//api/name/endSizeVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/endSizeVar</TokenIdentifier>
			<Abstract>end size variance in pixels of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endSizeVar</Declaration>
			
			
			<Anchor>//api/name/endSizeVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setStartColor:</TokenIdentifier>
			<Abstract>start color of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) ccColor4F startColor</Declaration>
			
			
			<Anchor>//api/name/startColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/startColor</TokenIdentifier>
			<Abstract>start color of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) ccColor4F startColor</Declaration>
			
			
			<Anchor>//api/name/startColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setStartColorVar:</TokenIdentifier>
			<Abstract>start color variance of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) ccColor4F startColorVar</Declaration>
			
			
			<Anchor>//api/name/startColorVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/startColorVar</TokenIdentifier>
			<Abstract>start color variance of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) ccColor4F startColorVar</Declaration>
			
			
			<Anchor>//api/name/startColorVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEndColor:</TokenIdentifier>
			<Abstract>end color and end color variation of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) ccColor4F endColor</Declaration>
			
			
			<Anchor>//api/name/endColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/endColor</TokenIdentifier>
			<Abstract>end color and end color variation of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) ccColor4F endColor</Declaration>
			
			
			<Anchor>//api/name/endColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEndColorVar:</TokenIdentifier>
			<Abstract>end color variance of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) ccColor4F endColorVar</Declaration>
			
			
			<Anchor>//api/name/endColorVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/endColorVar</TokenIdentifier>
			<Abstract>end color variance of each particle</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) ccColor4F endColorVar</Declaration>
			
			
			<Anchor>//api/name/endColorVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setStartSpin:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startSpin</Declaration>
			
			
			<Anchor>//api/name/startSpin</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/startSpin</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startSpin</Declaration>
			
			
			<Anchor>//api/name/startSpin</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setStartSpinVar:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startSpinVar</Declaration>
			
			
			<Anchor>//api/name/startSpinVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/startSpinVar</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float startSpinVar</Declaration>
			
			
			<Anchor>//api/name/startSpinVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEndSpin:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endSpin</Declaration>
			
			
			<Anchor>//api/name/endSpin</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/endSpin</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endSpin</Declaration>
			
			
			<Anchor>//api/name/endSpin</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEndSpinVar:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endSpinVar</Declaration>
			
			
			<Anchor>//api/name/endSpinVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/endSpinVar</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float endSpinVar</Declaration>
			
			
			<Anchor>//api/name/endSpinVar</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEmissionRate:</TokenIdentifier>
			<Abstract>emission rate of the particles</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float emissionRate</Declaration>
			
			
			<Anchor>//api/name/emissionRate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/emissionRate</TokenIdentifier>
			<Abstract>emission rate of the particles</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) float emissionRate</Declaration>
			
			
			<Anchor>//api/name/emissionRate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setTotalParticles:</TokenIdentifier>
			<Abstract>maximum particles of the system</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) NSUInteger totalParticles</Declaration>
			
			
			<Anchor>//api/name/totalParticles</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/totalParticles</TokenIdentifier>
			<Abstract>maximum particles of the system</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) NSUInteger totalParticles</Declaration>
			
			
			<Anchor>//api/name/totalParticles</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setTexture:</TokenIdentifier>
			<Abstract>conforms to CocosNodeTexture protocol</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) CCTexture2D *texture</Declaration>
			
			
			<Anchor>//api/name/texture</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/texture</TokenIdentifier>
			<Abstract>conforms to CocosNodeTexture protocol</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) CCTexture2D *texture</Declaration>
			
			
			<Anchor>//api/name/texture</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setBlendFunc:</TokenIdentifier>
			<Abstract>conforms to CocosNodeTexture protocol</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ccBlendFunc blendFunc</Declaration>
			
			
			<Anchor>//api/name/blendFunc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/blendFunc</TokenIdentifier>
			<Abstract>conforms to CocosNodeTexture protocol</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ccBlendFunc blendFunc</Declaration>
			
			
			<Anchor>//api/name/blendFunc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setOpacityModifyRGB:</TokenIdentifier>
			<Abstract>does the alpha value modify color</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, getter=doesOpacityModifyRGB, assign) BOOL opacityModifyRGB</Declaration>
			
			
			<Anchor>//api/name/opacityModifyRGB</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/opacityModifyRGB</TokenIdentifier>
			<Abstract>does the alpha value modify color</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, getter=doesOpacityModifyRGB, assign) BOOL opacityModifyRGB</Declaration>
			
			
			<Anchor>//api/name/opacityModifyRGB</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setBlendAdditive:</TokenIdentifier>
			<Abstract>whether or not the particles are using blend additive.
If enabled, the following blending function will be used.
@code
	source blend function = GLSRCALPHA;
	dest blend function = GL_ONE;
@endcode</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) BOOL blendAdditive</Declaration>
			
			
			<Anchor>//api/name/blendAdditive</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/blendAdditive</TokenIdentifier>
			<Abstract>whether or not the particles are using blend additive.
If enabled, the following blending function will be used.
@code
	source blend function = GLSRCALPHA;
	dest blend function = GL_ONE;
@endcode</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) BOOL blendAdditive</Declaration>
			
			
			<Anchor>//api/name/blendAdditive</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setPositionType:</TokenIdentifier>
			<Abstract>particles movement type: Free or Grouped</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) tCCPositionType positionType</Declaration>
			
			
			<Anchor>//api/name/positionType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/positionType</TokenIdentifier>
			<Abstract>particles movement type: Free or Grouped</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) tCCPositionType positionType</Declaration>
			
			
			<Anchor>//api/name/positionType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setAutoRemoveOnFinish:</TokenIdentifier>
			<Abstract>whether or not the node will be auto-removed when it has no particles left.
By default it is NO.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) BOOL autoRemoveOnFinish</Declaration>
			
			
			<Anchor>//api/name/autoRemoveOnFinish</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/autoRemoveOnFinish</TokenIdentifier>
			<Abstract>whether or not the node will be auto-removed when it has no particles left.
By default it is NO.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) BOOL autoRemoveOnFinish</Declaration>
			
			
			<Anchor>//api/name/autoRemoveOnFinish</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setEmitterMode:</TokenIdentifier>
			<Abstract>Switch between different kind of emitter modes:
   - kCCParticleModeGravity: uses gravity, speed, radial and tangential acceleration
   - kCCParticleModeRadius: uses radius movement + rotation</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) NSInteger emitterMode</Declaration>
			
			
			<Anchor>//api/name/emitterMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/emitterMode</TokenIdentifier>
			<Abstract>Switch between different kind of emitter modes:
   - kCCParticleModeGravity: uses gravity, speed, radial and tangential acceleration
   - kCCParticleModeRadius: uses radius movement + rotation</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) NSInteger emitterMode</Declaration>
			
			
			<Anchor>//api/name/emitterMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setBatchNode:</TokenIdentifier>
			<Abstract>weak reference to the CCSpriteBatchNode that renders the CCSprite</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) CCParticleBatchNode *batchNode</Declaration>
			
			
			<Anchor>//api/name/batchNode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/batchNode</TokenIdentifier>
			<Abstract>weak reference to the CCSpriteBatchNode that renders the CCSprite</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) CCParticleBatchNode *batchNode</Declaration>
			
			
			<Anchor>//api/name/batchNode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/setAtlasIndex:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) NSUInteger atlasIndex</Declaration>
			
			
			<Anchor>//api/name/atlasIndex</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCParticleSystem/atlasIndex</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) NSUInteger atlasIndex</Declaration>
			
			
			<Anchor>//api/name/atlasIndex</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCParticleSystem/particleWithFile:</TokenIdentifier>
			<Abstract>creates an initializes a CCParticleSystem from a plist file.
This plist files can be creted manually or with Particle Designer:
	http://particledesigner.71squared.com/</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>+ (id)particleWithFile:(NSString *)plistFile</Declaration>
			
			
			<Anchor>//api/name/particleWithFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/initWithFile:</TokenIdentifier>
			<Abstract>initializes a CCParticleSystem from a plist file.
This plist files can be creted manually or with Particle Designer:
	http://particledesigner.71squared.com/</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (id)initWithFile:(NSString *)plistFile</Declaration>
			
			
			<Anchor>//api/name/initWithFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/initWithDictionary:</TokenIdentifier>
			<Abstract>initializes a particle system from a NSDictionary.</Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (id)initWithDictionary:(NSDictionary *)dictionary</Declaration>
			
			
			<Anchor>//api/name/initWithDictionary:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/initWithTotalParticles:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTotalParticles:(NSUInteger)numberOfParticles</Declaration>
			
			
			<Anchor>//api/name/initWithTotalParticles:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/stopSystem</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (void)stopSystem</Declaration>
			
			
			<Anchor>//api/name/stopSystem</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/resetSystem</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (void)resetSystem</Declaration>
			
			
			<Anchor>//api/name/resetSystem</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/isFull</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isFull</Declaration>
			
			
			<Anchor>//api/name/isFull</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/updateQuadWithParticle:newPosition:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (void)updateQuadWithParticle:(tCCParticle *)particle newPosition:(CGPoint)pos</Declaration>
			
			
			<Anchor>//api/name/updateQuadWithParticle:newPosition:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/postStep</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (void)postStep</Declaration>
			
			
			<Anchor>//api/name/postStep</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/update:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (void)update:(ccTime)dt</Declaration>
			
			
			<Anchor>//api/name/update:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCParticleSystem/updateWithNoTime</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CCParticleSystem.h</DeclaredIn>			
			
			<Declaration>- (void)updateWithNoTime</Declaration>
			
			
			<Anchor>//api/name/updateWithNoTime</Anchor>
		</Token>
		
	</File>
</Tokens>