<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCMenuItemFont.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCMenuItemFont</TokenIdentifier>
			<Abstract>A CCMenuItemFont
Helper class that creates a CCMenuItemLabel class with a Label</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>
			
			<NodeRef refid="100"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/setFontSize:</TokenIdentifier>
			<Abstract>set default font size</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>+ (void)setFontSize:(NSUInteger)s</Declaration>
			
			
			<Anchor>//api/name/setFontSize:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/fontSize</TokenIdentifier>
			<Abstract>get default font size</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>+ (NSUInteger)fontSize</Declaration>
			
			
			<Anchor>//api/name/fontSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/setFontName:</TokenIdentifier>
			<Abstract>set default font name</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>+ (void)setFontName:(NSString *)n</Declaration>
			
			
			<Anchor>//api/name/setFontName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/fontName</TokenIdentifier>
			<Abstract>get default font name</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)fontName</Declaration>
			
			
			<Anchor>//api/name/fontName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/itemWithString:</TokenIdentifier>
			<Abstract>creates a menu item from a string without target/selector. To be used with CCMenuItemToggle</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>+ (id)itemWithString:(NSString *)value</Declaration>
			
			
			<Anchor>//api/name/itemWithString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/itemWithString:target:selector:</TokenIdentifier>
			<Abstract>creates a menu item from a string with a target/selector.
The "target" won't be retained.</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>+ (id)itemWithString:(NSString *)value target:(id)r selector:(SEL)s</Declaration>
			
			
			<Anchor>//api/name/itemWithString:target:selector:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/itemWithString:block:</TokenIdentifier>
			<Abstract>creates a menu item from a string with the specified block.
The block will be "copied".</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>+ (id)itemWithString:(NSString *)value block:(void ( ^ ) ( id sender ))block</Declaration>
			
			
			<Anchor>//api/name/itemWithString:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenuItemFont/initWithString:target:selector:</TokenIdentifier>
			<Abstract>initializes a menu item from a string with a target/selector
  The "target" won't be retained.</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>- (id)initWithString:(NSString *)value target:(id)r selector:(SEL)s</Declaration>
			
			
			<Anchor>//api/name/initWithString:target:selector:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenuItemFont/setFontSize:</TokenIdentifier>
			<Abstract>set font size</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>- (void)setFontSize:(NSUInteger)s</Declaration>
			
			
			<Anchor>//api/name/setFontSize:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenuItemFont/fontSize</TokenIdentifier>
			<Abstract>get font size</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>- (NSUInteger)fontSize</Declaration>
			
			
			<Anchor>//api/name/fontSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenuItemFont/setFontName:</TokenIdentifier>
			<Abstract>set the font name</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>- (void)setFontName:(NSString *)n</Declaration>
			
			
			<Anchor>//api/name/setFontName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenuItemFont/fontName</TokenIdentifier>
			<Abstract>get the font name</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>- (NSString *)fontName</Declaration>
			
			
			<Anchor>//api/name/fontName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenuItemFont/initWithString:block:</TokenIdentifier>
			<Abstract>initializes a menu item from a string with the specified block.
The block will be "copied".</Abstract>
			<DeclaredIn>CCMenuItem.h</DeclaredIn>			
			
			<Declaration>- (id)initWithString:(NSString *)value block:(void ( ^ ) ( id sender ))block</Declaration>
			
			
			<Anchor>//api/name/initWithString:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/itemFromString:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>ccDeprecated.h</DeclaredIn>			
			
			<Declaration>+ (id)itemFromString:(NSString *)value</Declaration>
			
			
			<Anchor>//api/name/itemFromString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/itemFromString:target:selector:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>ccDeprecated.h</DeclaredIn>			
			
			<Declaration>+ (id)itemFromString:(NSString *)value target:(id)r selector:(SEL)s</Declaration>
			
			
			<Anchor>//api/name/itemFromString:target:selector:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCMenuItemFont/itemFromString:block:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>ccDeprecated.h</DeclaredIn>			
			
			<Declaration>+ (id)itemFromString:(NSString *)value block:(void ( ^ ) ( id sender ))block</Declaration>
			
			
			<Anchor>//api/name/itemFromString:block:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenuItemFont/initFromString:target:selector:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>ccDeprecated.h</DeclaredIn>			
			
			<Declaration>- (id)initFromString:(NSString *)value target:(id)r selector:(SEL)s</Declaration>
			
			
			<Anchor>//api/name/initFromString:target:selector:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCMenuItemFont/initFromString:block:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>ccDeprecated.h</DeclaredIn>			
			
			<Declaration>- (id)initFromString:(NSString *)value block:(void ( ^ ) ( id sender ))block</Declaration>
			
			
			<Anchor>//api/name/initFromString:block:</Anchor>
		</Token>
		
	</File>
</Tokens>