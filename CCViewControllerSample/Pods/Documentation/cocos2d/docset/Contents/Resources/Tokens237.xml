<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CDSoundEngine.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CDSoundEngine</TokenIdentifier>
			<Abstract>CDSoundEngine is built upon OpenAL and works with SDK 2.0.
CDSoundEngine is a sound engine built upon OpenAL and derived from Apple's oalTouch
example. It can playback up to 32 sounds simultaneously with control over pitch, pan
and gain.  It can be set up to handle audio session interruption automatically.  You
may decide to use CDSoundEngine directly instead of CDAudioManager or SimpleAudioEngine
because you require OS 2.0 compatibility.</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>
			
			<NodeRef refid="237"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setMasterGain:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) ALfloat masterGain</Declaration>
			
			
			<Anchor>//api/name/masterGain</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CDSoundEngine/masterGain</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) ALfloat masterGain</Declaration>
			
			
			<Anchor>//api/name/masterGain</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setLastErrorCode:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) ALenum lastErrorCode</Declaration>
			
			
			<Anchor>//api/name/lastErrorCode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CDSoundEngine/lastErrorCode</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) ALenum lastErrorCode</Declaration>
			
			
			<Anchor>//api/name/lastErrorCode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setFunctioning:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL functioning</Declaration>
			
			
			<Anchor>//api/name/functioning</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CDSoundEngine/functioning</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL functioning</Declaration>
			
			
			<Anchor>//api/name/functioning</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setAsynchLoadProgress:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readwrite) float asynchLoadProgress</Declaration>
			
			
			<Anchor>//api/name/asynchLoadProgress</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CDSoundEngine/asynchLoadProgress</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readwrite) float asynchLoadProgress</Declaration>
			
			
			<Anchor>//api/name/asynchLoadProgress</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setGetGainWorks:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL getGainWorks</Declaration>
			
			
			<Anchor>//api/name/getGainWorks</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CDSoundEngine/getGainWorks</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL getGainWorks</Declaration>
			
			
			<Anchor>//api/name/getGainWorks</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setSourceTotal:</TokenIdentifier>
			<Abstract>Total number of sources available</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) int sourceTotal</Declaration>
			
			
			<Anchor>//api/name/sourceTotal</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CDSoundEngine/sourceTotal</TokenIdentifier>
			<Abstract>Total number of sources available</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) int sourceTotal</Declaration>
			
			
			<Anchor>//api/name/sourceTotal</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setSourceGroupTotal:</TokenIdentifier>
			<Abstract>Total number of source groups that have been defined</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSUInteger sourceGroupTotal</Declaration>
			
			
			<Anchor>//api/name/sourceGroupTotal</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CDSoundEngine/sourceGroupTotal</TokenIdentifier>
			<Abstract>Total number of source groups that have been defined</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSUInteger sourceGroupTotal</Declaration>
			
			
			<Anchor>//api/name/sourceGroupTotal</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CDSoundEngine/setMixerSampleRate:</TokenIdentifier>
			<Abstract>Sets the sample rate for the audio mixer. For best performance this should match the sample rate of your audio content</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>+ (void)setMixerSampleRate:(Float32)sampleRate</Declaration>
			
			
			<Anchor>//api/name/setMixerSampleRate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/init</TokenIdentifier>
			<Abstract>Initializes the engine with a group definition and a total number of groups</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/playSound:sourceGroupId:pitch:pan:gain:loop:</TokenIdentifier>
			<Abstract>Plays a sound in a channel group with a pitch, pan and gain. The sound could played looped or not</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (ALuint)playSound:(int)soundId sourceGroupId:(int)sourceGroupId pitch:(float)pitch pan:(float)pan gain:(float)gain loop:(BOOL)loop</Declaration>
			
			
			<Anchor>//api/name/playSound:sourceGroupId:pitch:pan:gain:loop:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/soundSourceForSound:sourceGroupId:</TokenIdentifier>
			<Abstract>Creates and returns a sound source object for the specified sound within the specified source group.</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (CDSoundSource *)soundSourceForSound:(int)soundId sourceGroupId:(int)sourceGroupId</Declaration>
			
			
			<Anchor>//api/name/soundSourceForSound:sourceGroupId:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/stopSound:</TokenIdentifier>
			<Abstract>Stops playing a sound</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)stopSound:(ALuint)sourceId</Declaration>
			
			
			<Anchor>//api/name/stopSound:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/stopSourceGroup:</TokenIdentifier>
			<Abstract>Stops playing a source group</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)stopSourceGroup:(int)sourceGroupId</Declaration>
			
			
			<Anchor>//api/name/stopSourceGroup:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/stopAllSounds</TokenIdentifier>
			<Abstract>Stops all playing sounds</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)stopAllSounds</Declaration>
			
			
			<Anchor>//api/name/stopAllSounds</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/defineSourceGroups:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)defineSourceGroups:(NSArray *)sourceGroupDefinitions</Declaration>
			
			
			<Anchor>//api/name/defineSourceGroups:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/defineSourceGroups:total:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)defineSourceGroups:(int [ ])sourceGroupDefinitions total:(NSUInteger)total</Declaration>
			
			
			<Anchor>//api/name/defineSourceGroups:total:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setSourceGroupNonInterruptible:isNonInterruptible:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)setSourceGroupNonInterruptible:(int)sourceGroupId isNonInterruptible:(BOOL)isNonInterruptible</Declaration>
			
			
			<Anchor>//api/name/setSourceGroupNonInterruptible:isNonInterruptible:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/setSourceGroupEnabled:enabled:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)setSourceGroupEnabled:(int)sourceGroupId enabled:(BOOL)enabled</Declaration>
			
			
			<Anchor>//api/name/setSourceGroupEnabled:enabled:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/sourceGroupEnabled:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (BOOL)sourceGroupEnabled:(int)sourceGroupId</Declaration>
			
			
			<Anchor>//api/name/sourceGroupEnabled:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/loadBufferFromData:soundData:format:size:freq:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (BOOL)loadBufferFromData:(int)soundId soundData:(ALvoid *)soundData format:(ALenum)format size:(ALsizei)size freq:(ALsizei)freq</Declaration>
			
			
			<Anchor>//api/name/loadBufferFromData:soundData:format:size:freq:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/loadBuffer:filePath:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (BOOL)loadBuffer:(int)soundId filePath:(NSString *)filePath</Declaration>
			
			
			<Anchor>//api/name/loadBuffer:filePath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/loadBuffersAsynchronously:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)loadBuffersAsynchronously:(NSArray *)loadRequests</Declaration>
			
			
			<Anchor>//api/name/loadBuffersAsynchronously:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/unloadBuffer:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (BOOL)unloadBuffer:(int)soundId</Declaration>
			
			
			<Anchor>//api/name/unloadBuffer:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/openALContext</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (ALCcontext *)openALContext</Declaration>
			
			
			<Anchor>//api/name/openALContext</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/bufferDurationInSeconds:</TokenIdentifier>
			<Abstract>Returns the duration of the buffer in seconds or a negative value if the buffer id is invalid</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (float)bufferDurationInSeconds:(int)soundId</Declaration>
			
			
			<Anchor>//api/name/bufferDurationInSeconds:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/bufferSizeInBytes:</TokenIdentifier>
			<Abstract>Returns the size of the buffer in bytes or a negative value if the buffer id is invalid</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (ALsizei)bufferSizeInBytes:(int)soundId</Declaration>
			
			
			<Anchor>//api/name/bufferSizeInBytes:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/bufferFrequencyInHertz:</TokenIdentifier>
			<Abstract>Returns the sampling frequency of the buffer in hertz or a negative value if the buffer id is invalid</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (ALsizei)bufferFrequencyInHertz:(int)soundId</Declaration>
			
			
			<Anchor>//api/name/bufferFrequencyInHertz:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CDSoundEngine/_soundSourcePreRelease:</TokenIdentifier>
			<Abstract>Used internally, never call unless you know what you are doing</Abstract>
			<DeclaredIn>CocosDenshion.h</DeclaredIn>			
			
			<Declaration>- (void)_soundSourcePreRelease:(CDSoundSource *)soundSource</Declaration>
			
			
			<Anchor>//api/name/_soundSourcePreRelease:</Anchor>
		</Token>
		
	</File>
</Tokens>